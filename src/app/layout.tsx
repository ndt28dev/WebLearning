import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import "@mantine/core/styles.css";
import { Container, createTheme, MantineProvider, Paper } from "@mantine/core";
import { ColorSchemeScript, mantineHtmlProps } from "@mantine/core";
import "@mantine/carousel/styles.css";
import "@mantine/dates/styles.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "T-Learning",
  description: "Generated by create next app",
};

const theme = createTheme({
  colors: {
    brand: [
      "#F2F9FF", // 0
      "#DCEEFF", // 1
      "#99c2ef", // 2
      "#66a3e6", // 3
      "#3385de", // 4
      "#3070CA", // 5
      "#265aa2", // 6
      "#1d4379", // 7
      "#132d51", // 8
      "#0a1628", // 9
    ],
  },
  primaryColor: "brand",
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" {...mantineHtmlProps}>
      <head>
        <ColorSchemeScript defaultColorScheme="auto" />
      </head>
      <body
        suppressHydrationWarning={true}
        className={`${geistSans.variable} ${geistMono.variable}`}
      >
        <MantineProvider theme={theme}>{children}</MantineProvider>
      </body>
    </html>
  );
}
